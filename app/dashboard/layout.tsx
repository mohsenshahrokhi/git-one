'use client'

import AdminNavbar from "@/components/adminComponent/Navbar/AdminNavbar"
import AdminSidebar from "@/components/adminComponent/Sidebar/AdminSidebar"
import { usePathname, useRouter, useSearchParams } from "next/navigation"

export default function RootLayout({
  children
}: {
  children: React.ReactNode
}) {
  const router = useRouter()
  const pathName = usePathname()
  const searchParams = useSearchParams()
  const sidebarVisible = searchParams.get('sidebarVisible') === 'true' ? true : false
  const sidebarControl = searchParams.get('sidebarControl') === 'true' ? true : false

  function closeSidebar() {
    if (sidebarVisible) {
      const params = new URLSearchParams(searchParams)

      sidebarVisible ? params.set('sidebarVisible', 'false') : params.set('sidebarVisible', 'false')
      router.push(`${pathName}?${params}`)
    }
  }

  return (
    <div className="flex flex-col w-full h-screen relative dark:bg-zinc-900 dark:text-zinc-100">

      <AdminNavbar />
      <div className="flex relative justify-end">
        <div className={` ${sidebarVisible ? sidebarControl ? 'w-1/6 border mr-2 mb-2 px-1 justify-center items-center ' : ' translate-x-0 w-1/2 border mx-2 mb-2 px-3 ' : ' translate-x-48 w-0 border-0 p-0 m-0'}  shadow-lg  rounded-md h-[80] flex flex-col bg-zinc-50  transition-all mt-2 ease-in-out duration-300 dark:bg-zinc-800 dark:border-zinc-700`}>
          <AdminSidebar />
        </div>
        <div className={` flex ${sidebarVisible ? sidebarControl ? ' w-5/6 mr-2 ' : ' w-1/2 ' : ' w-full mr-2 '} transition-all ease-in-out duration-300 my-2 ml-2 p-3 shadow-lg border bg-zinc-50 border-zinc-300 dark:border-zinc-700 dark:bg-zinc-800 dark:text-zinc-100 rounded-md`}
          onClick={closeSidebar}
        >
          {children}
        </div>
      </div>
    </div >
  )
}



/* 

'use client'

import AdminNavbar from "@/components/adminComponent/Navbar/AdminNavbar"
import AdminSidebar from "@/components/adminComponent/Sidebar/AdminSidebar"
import ThemeSwitcher from "@/components/ui/components/ThemeSwitcher"
import { SetSidebarControl, SetSidebarVisible } from "@/slices/ThemeSlice"
import { useAppDispatch, useAppSelector } from "@/store/hooks"
import Headroom from "react-headroom"

// export const metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }


export default function RootLayout({
  children,
}: {
  children: React.ReactNode
}) {

  const dispatch = useAppDispatch()
  const { sidebarVisible, sidebarControl, color } = useAppSelector((store) => store.themeMode.theme)

  function closeSidebar() {
    if (sidebarVisible) {
      dispatch(SetSidebarVisible())
      dispatch(SetSidebarControl(false))
    }
  }

  return (
    <div className="flex flex-col w-full h-screen relative dark:bg-zinc-900 dark:text-zinc-100">
      <Headroom>
        <AdminNavbar />
      </Headroom>
      <div className="flex relative justify-end">
        <div className={` ${sidebarVisible ? sidebarControl ? 'w-1/12 border mr-2 mb-2 px-5 ' : ' translate-x-0 w-2/12 border mr-2 mb-2 px-5 ' : ' translate-x-48 w-0 border-0 p-0 m-0'}  shadow-lg  rounded-md h-[80] flex flex-col bg-zinc-50 transition-all mt-2 ease-in-out duration-300 dark:bg-zinc-800 dark:border-zinc-700`}>
          <AdminSidebar />
        </div>
        <div className={` flex ${sidebarVisible ? sidebarControl ? 'w-11/12' : ' w-10/12 ' : ' w-full'} transition-all ease-in-out duration-300 my-2 p-3 shadow-lg border bg-zinc-50 border-zinc-300 dark:border-zinc-700 dark:bg-zinc-800 dark:text-zinc-100 rounded-md`}
          onClick={closeSidebar}
        >
          {children}
          <ThemeSwitcher />
        </div>
      </div>
    </div >
  )
}

*/